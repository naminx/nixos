#!/usr/bin/env bash

nullglob=$(shopt -p nullglob); shopt -s nullglob extglob

is_uint() { case $1 in '' | *[!0-9]* ) return 1;; esac ;}

print_usage() {
    echo "usage: ${0##*/} left_edge [right_edge] [top_edge] [bottom_edge]"
}

LEFT_EDGE=$1
RIGHT_EDGE=${2:-0}
TOP_EDGE=${3:-0}
BOTTOM_EDGE=${4:-0}

if [ -z "$1" ] \
    || (! (is_uint "$LEFT_EDGE" || ([ "${LEFT_EDGE:0:1}" = "-" ] && is_uint "${LEFT_EDGE:1}"))) \
    || (! (is_uint "$RIGHT_EDGE" || ([ "${RIGHT_EDGE:0:1}" = "-" ] && is_uint "${RIGHT_EDGE:1}"))) \
    || (! (is_uint "$TOP_EDGE" || ([ "${TOP_EDGE:0:1}" = "-" ] && is_uint "${TOP_EDGE:1}"))) \
    || (! (is_uint "$BOTTOM_EDGE" || ([ "${BOTTOM_EDGE:0:1}" = "-" ] && is_uint "${BOTTOM_EDGE:1}"))); then
    print_usage
    exit 1
fi

files=([0-9][0-9][0-9].@(jpg|png|webp))
if [ "$files" = "" ]; then
    echo error: files not found
    exit 1
fi

GEOMETRY=$(magick identify -ping -format "%[w]x%[h]\n" "${files[0]}")

FULL_WIDTH=$((${GEOMETRY%%x*}-($RIGHT_EDGE)))
HALF_WIDTH=$(($FULL_WIDTH/2))
PAGE_WIDTH=$(($HALF_WIDTH-($LEFT_EDGE)))
TWO_PAGE_WIDTH=$((2*$PAGE_WIDTH))
FIRSTPAGE_LEFT=$((($FULL_WIDTH-$PAGE_WIDTH+1)/2))

FULL_HEIGHT=${GEOMETRY##*x}
HEIGHT=$(($FULL_HEIGHT-($TOP_EDGE)-($BOTTOM_EDGE)))
mkdir stock

tmp_dir=$(mktemp -d --tmpdir)
for i in "${files[0]}"; do
    base=${i%.*}
    ext=${i##*.}
    crop=${PAGE_WIDTH}x$HEIGHT+$HALF_WIDTH+$TOP_EDGE
    magick "$i" -crop $crop +repage "$tmp_dir/${base}a.jpg"
    magick "$i" -crop $crop +repage "$tmp_dir/${base}a.webp"
    output=$(demiff "$( keepsmallest "$tmp_dir/${base}a.jpg" "$tmp_dir/${base}a.webp" \
                    "$( magick "$i" -crop $crop +repage miff:- \
                      | minify "$tmp_dir/${base}a-miff")")")
    echo ${output##*/}
    mv "$output" .
    crop=${PAGE_WIDTH}x$HEIGHT+$FIRSTPAGE_LEFT+$TOP_EDGE
    magick "$i" -crop $crop +repage "$tmp_dir/${base}b.jpg"
    magick "$i" -crop $crop +repage "$tmp_dir/${base}b.webp"
    output=$(demiff "$( keepsmallest "$tmp_dir/${base}b.jpg" "$tmp_dir/${base}b.webp" \
                    "$( magick "$i" -crop $crop +repage miff:- \
                      | minify "$tmp_dir/${base}b-miff")")")
    echo ${output##*/}
    mv "$output" .
    crop=${PAGE_WIDTH}x$HEIGHT+$LEFT_EDGE+$TOP_EDGE
    magick "$i" -crop $crop +repage "$tmp_dir/${base}c.jpg"
    magick "$i" -crop $crop +repage "$tmp_dir/${base}c.webp"
    output=$(demiff "$( keepsmallest "$tmp_dir/${base}c.jpg" "$tmp_dir/${base}c.webp" \
                    "$( magick "$i" -crop $crop +repage miff:- \
                      | minify "$tmp_dir/${base}c-miff")")")
    echo ${output##*/}
    mv "$output" .
    mv $i stock
done
for i in "${files[@]:1}"; do
  if [ -f "$i" ]; then
    base=${i%.*}
    ext=${i##*.}
    crop=${PAGE_WIDTH}x$HEIGHT+$HALF_WIDTH+$TOP_EDGE
    magick "$i" -crop $crop +repage "$tmp_dir/${base}a.jpg"
    magick "$i" -crop $crop +repage "$tmp_dir/${base}a.webp"
    output=$(demiff "$( keepsmallest "$tmp_dir/${base}a.jpg" "$tmp_dir/${base}a.webp" \
                    "$( magick "$i" -crop $crop +repage miff:- \
                      | minify "$tmp_dir/${base}a-miff")")")
    echo ${output##*/}
    mv "$output" .
    crop=${PAGE_WIDTH}x$HEIGHT+$LEFT_EDGE+$TOP_EDGE
    magick "$i" -crop $crop +repage "$tmp_dir/${base}c.jpg"
    magick "$i" -crop $crop +repage "$tmp_dir/${base}c.webp"
    output=$(demiff "$( keepsmallest "$tmp_dir/${base}c.jpg" "$tmp_dir/${base}c.webp" \
                    "$( magick "$i" -crop $crop +repage miff:- \
                     | minify "$tmp_dir/${base}c-miff")")")
    echo ${output##*/}
    mv "$output" .
    mv $i stock
  fi
done
rmdir "$tmp_dir"

$nullglob; unset nullglob
